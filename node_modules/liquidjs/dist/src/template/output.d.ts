<<<<<<< HEAD
import { Value } from './value';
import { Template, TemplateImpl } from '../template';
import { Context } from '../context/context';
import { Emitter } from '../emitters/emitter';
import { OutputToken } from '../tokens/output-token';
import { Liquid } from '../liquid';
export declare class Output extends TemplateImpl<OutputToken> implements Template {
    value: Value;
    constructor(token: OutputToken, liquid: Liquid);
    render(ctx: Context, emitter: Emitter): IterableIterator<unknown>;
}
=======
import { Value } from './value';
import { Template, TemplateImpl } from '../template';
import { Context } from '../context/context';
import { Emitter } from '../emitters/emitter';
import { OutputToken } from '../tokens/output-token';
import { Liquid } from '../liquid';
export declare class Output extends TemplateImpl<OutputToken> implements Template {
    value: Value;
    constructor(token: OutputToken, liquid: Liquid);
    render(ctx: Context, emitter: Emitter): IterableIterator<unknown>;
}
>>>>>>> 7fc95c6a4e4164a2677891ece3ea06752e5839e7
