<<<<<<< HEAD
import type { Template } from '../template/template';
export interface Cache<T> {
    write(key: string, value: T): void | Promise<void>;
    read(key: string): T | undefined | Promise<T | undefined>;
    remove(key: string): void | Promise<void>;
}
export type LiquidCache = Cache<Template[] | Promise<Template[]>>;
=======
import type { Template } from '../template/template';
export interface Cache<T> {
    write(key: string, value: T): void | Promise<void>;
    read(key: string): T | undefined | Promise<T | undefined>;
    remove(key: string): void | Promise<void>;
}
export type LiquidCache = Cache<Template[] | Promise<Template[]>>;
>>>>>>> 7fc95c6a4e4164a2677891ece3ea06752e5839e7
